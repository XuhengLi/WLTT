#!/bin/bash
# WLTTBackendDB

# Stop on errors
set -e


# Sanity check command line options
usage() {
  echo "Usage: $0 (create|destroy|reset|dump)"
}

if [ $# -ne 1 ]; then
  usage
  exit 1
fi


# Parse argument.  $1 is the first argument
case $1 in
  "create")
    if [ ! -f var/WLTTBackend.sqlite3 ]; then
      mkdir -p var/uploads
      echo "+ mkdir -p var/uploads"
      sqlite3 var/WLTTBackend.sqlite3 < sql/schema.sql
      echo "+ sqlite3 var/WLTTBackend.sqlite3 < sql/schema.sql"
      sqlite3 var/WLTTBackend.sqlite3 < sql/data.sql
      echo "+ sqlite3 var/WLTTBackend.sqlite3 < sql/data.sql"
      # cp sql/uploads/* var/uploads/
      # echo "+ cp sql/uploads/* var/uploads/"
    else
      echo "Error: database already exists"
    fi
    ;;

  "destroy")
    rm -rf var/WLTTBackend.sqlite3 var/uploads
    echo "+ rm -rf var/WLTTBackend.sqlite3 var/uploads"
    ;;

  "reset")
    ./bin/WLTTBackendDB destroy
    ./bin/WLTTBackendDB create
    ;;

  "dump")
    echo "+ sqlite3 -batch -line var/WLTTBackend.sqlite3 'SELECT * FROM users'"
    sqlite3 -batch -line var/WLTTBackend.sqlite3 'SELECT * FROM users'
    echo "+ sqlite3 -batch -line var/WLTTBackend.sqlite3 'SELECT * FROM questions'"
    sqlite3 -batch -line var/WLTTBackend.sqlite3 'SELECT * FROM questions'
    echo "+ sqlite3 -batch -line var/WLTTBackend.sqlite3 'SELECT * FROM leaderboard'"
    sqlite3 -batch -line var/WLTTBackend.sqlite3 'SELECT * FROM leaderboard'
    ;;
  *)
    usage
    exit 1
    ;;
esac